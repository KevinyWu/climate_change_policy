set.seed(60637)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
global <- read.csv(file = '../data/global_temp_cleaned.csv', as.is = TRUE)
usa <- read.csv(file = '../data/usa_temp_cleaned.csv', as.is = TRUE)
# global temperatures
ggplot(global, aes(x = Year + (Month/12))) +
geom_line(aes(y = Global_Avg_1, color = "1-Year Average with 95% Uncertainty")) +
geom_ribbon(aes(ymin = Global_Avg_1 - Global_Avg_Unc_1,
ymax = Global_Avg_1 + Global_Avg_Unc_1),
fill="pink", alpha = 0.6) +
geom_line(aes(y = Global_Avg_10, color = "10-Year Average with 95% Uncertainty")) +
geom_ribbon(aes(ymin = Global_Avg_10 - Global_Avg_Unc_10,
ymax = Global_Avg_10 + Global_Avg_Unc_10),
fill="sky blue", alpha = 0.5) +
scale_colour_manual("",
breaks = c("1-Year Average with 95% Uncertainty",
"10-Year Average with 95% Uncertainty"),
values = c("red", "blue")) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 15),
plot.title = element_text(size = 25),
legend.text = element_text(size = 15)) +
xlab('Year') +
ylab('Average Temperature (Celcius)') +
ggtitle('Global Average Land Surface Temperatures, 1850-2020')
# usa temperatures
ggplot(usa, aes(x = Year + (Month/12))) +
geom_line(aes(y = USA_Avg_1, color = "1-Year Average with 95% Uncertainty")) +
geom_ribbon(aes(ymin = USA_Avg_1 - USA_Avg_Unc_1,
ymax = USA_Avg_1 + USA_Avg_Unc_1),
fill="pink", alpha = 0.6) +
geom_line(aes(y = USA_Avg_10, color = "10-Year Average with 95% Uncertainty")) +
geom_ribbon(aes(ymin = USA_Avg_10 - USA_Avg_Unc_10,
ymax = USA_Avg_10 + USA_Avg_Unc_10),
fill="sky blue", alpha = 0.5) +
scale_colour_manual("",
breaks = c("1-Year Average with 95% Uncertainty",
"10-Year Average with 95% Uncertainty"),
values = c("red", "blue")) +
theme_bw() +
theme(legend.position = "bottom",
axis.title = element_text(size = 20),
axis.text = element_text(size = 15),
plot.title = element_text(size = 25),
legend.text = element_text(size = 15)) +
xlab('Year') +
ylab('Average Temperature (Celcius)') +
ggtitle('Contiguous U.S. Average Land Surface Temperatures, 1850-2020')
# mean temperature statistics
mean(global$Global_Avg_1)
sd(global$Global_Avg_1)
mean(global[1:1776,]$Global_Avg_1)
sd(global[1:1776,]$Global_Avg_1)
mean(global[1777:2052,]$Global_Avg_1)
sd(global[1777:2052,]$Global_Avg_1)
mean(usa[1:2046,]$USA_Avg_1)
sd(usa[1:2046,]$USA_Avg_1)
mean(usa[1:1776,]$USA_Avg_1)
sd(usa[1:1776,]$USA_Avg_1)
mean(usa[1777:2046,]$USA_Avg_1)
sd(usa[1777:2046,]$USA_Avg_1)
# mean rate of change statistics
(global[2005,]$Global_Avg_10 - global[1777,]$Global_Avg_10)/20*100
(global[2005,]$Global_Avg_10 - global[1201,]$Global_Avg_10)/68*100
(global[2005,]$Global_Avg_10 - global[601,]$Global_Avg_10)/118*100
(global[2005,]$Global_Avg_10 - global[1,]$Global_Avg_10)/168*100
(usa[1992,]$USA_Avg_10 - usa[1777,]$USA_Avg_10)/18*100
(usa[1992,]$USA_Avg_10 - usa[1201,]$USA_Avg_10)/66*100
(usa[1992,]$USA_Avg_10 - usa[601,]$USA_Avg_10)/116*100
(usa[1992,]$USA_Avg_10 - usa[1,]$USA_Avg_10)/166*100
set.seed(60637)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
global <- read.csv(file = '../data/global_temp_cleaned.csv', as.is = TRUE)
usa <- read.csv(file = '../data/usa_temp_cleaned.csv', as.is = TRUE)
# split data into 1850 - 1999 and 2000 - 2020
ts_global = ts(data = global$Global_Avg_1, end = 150, frequency = 12)
ts_us = ts(data = usa$USA_Avg_1, start = 1, end = 150, frequency = 12)
ts_global_new = ts(data = global$Global_Avg_1, start = 150, end = 170, frequency = 12)
ts_us_new = ts(data = usa$USA_Avg_1, start = 150, end = 170, frequency = 12)
# periodogram analysis
library(astsa)
temp = ts(data = global$Global_Avg_1, frequency = 12)
per = mvspec(temp, log="no", main="Periodogram")
n = per$n.used
c(length(temp), n)
m = length(per$freq)
y = cbind(1:m, per$spec, per$freq, 1/per$freq)
colnames(y) = c('j','periodogram','frequency','year/cycle')
y[order(y[,'periodogram'], decreasing=TRUE)[1:10], ]
temp2 = ts(data = usa$USA_Avg_1, start = 1, end = 170, frequency = 12)
per = mvspec(temp2, log="no", main="Periodogram")
n = per$n.used
c(length(temp2), n)
m = length(per$freq)
y = cbind(1:m, per$spec, per$freq, 1/per$freq)
colnames(y) = c('j','periodogram','frequency','year/cycle')
y[order(y[,'periodogram'], decreasing=TRUE)[1:10], ]
per = mvspec(temp2, log="no", main="Periodogram")
n = per$n.used
c(length(temp2), n)
m = length(per$freq)
y = cbind(1:m, per$spec, per$freq, 1/per$freq)
colnames(y) = c('j','periodogram','frequency','year/cycle')
y[order(y[,'periodogram'], decreasing=TRUE)[1:10], ]
# plot
per101 = mvspec(ts_global, plot=FALSE, spans=100) # estimate spectrum using L=101
n = per101$n.used
freq = 1:(n/2) / n
plot(log(abs(freq[1:30])), log(per101$spec[1:30]), type="l", lty=1, lwd=2,
xlab="log (|w|)", ylab="log f(w)", ylim=c(-1.3, 0.5),
main="Slope Est")
# fit linear model
coef(lm(log(per101$spec[1:30]) ~ log(abs(freq[1:30]))))
per101 = mvspec(ts_us, plot=FALSE, spans=100) # estimate spectrum using L=101
n = per101$n.used
freq = 1:(n/2) / n
plot(log(abs(freq[1:30])), log(per101$spec[1:30]), type="l", lty=1, lwd=2,
xlab="log (|w|)", ylab="log f(w)", ylim=c(-1.3, 0.5),
main="Slope Est")
# fit linear model
coef(lm(log(per101$spec[1:30]) ~ log(abs(freq[1:30]))))
#' The fitted linear model results show that the coefficient $-2d \approx -0.057, -0.019$ respectively, which is outside the CI of our stdev of temperature so we can have that $d \approx 0$.
#' So, we can reduce the model to an ARMA(p,q) process:
glob_ann = aggregate(global$Global_Avg_1, list(global$Year), FUN=mean)
ts_annual = ts(data = glob_ann$x, frequency = 12)
acfs = acf2(ts_annual, max.lag=48, main="ACF/PACF")
y1 = diff(ts_global, lag=12)
per1 = mvspec(y1, log="no", ylim=c(0,10))
y2 = diff(ts_us, lag=12)
per2 = mvspec(y2, log="no", ylim=c(0,10))
y3 = diff(ts_global_new, lag=12)
per1 = mvspec(y1, log="no", ylim=c(0,10))
y4 = diff(ts_us_new, lag=12)
per2 = mvspec(y2, log="no", ylim=c(0,10))
#' Now we will fit the ARMA(p,q) model for $$y_t: \ \phi'(B)\ y_t = \theta(B)\ w_t$$.
#' First, we look at the sample ACF and PACF to find the potential ARMA model candidates.
acfs = acf2(ts_global, max.lag=120, main="ACF/PACF")
acfs = acf2(ts_us, max.lag=120, main="ACF/PACF")
mod1 = sarima(y1, p=12, d=0, q=20, details=FALSE)
mod1$ttable
mod2 = sarima(y2, p=12, d=0, q=20, details=FALSE)
mod2$ttable
mod1_new = sarima(y3, p=12, d=0, q=20, details=FALSE)
mod1$ttable
mod2_new = sarima(y4, p=12, d=0, q=20, details=FALSE)
mod2$ttable
predict(mod1,n.ahead=10)
---
title: "Code For SSI Project"
output: html_document
date: '2022-05-22'
---
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
global <- read.csv(file = '../data/global_temp_cleaned.csv', as.is = TRUE)
us <- read.csv(file = '../data/usa_temp_cleaned.csv', as.is = TRUE)
ts_global = ts(data = global$Global_Avg_1, end = 150, frequency = 12)
ts_us = ts(data = usa$USA_Avg_1, start = 1, end = 150, frequency = 12)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
global <- read.csv(file = '../data/global_temp_cleaned.csv', as.is = TRUE)
us <- read.csv(file = '../data/usa_temp_cleaned.csv', as.is = TRUE)
ts_global = ts(data = global$Global_Avg_1, end = 150, frequency = 12)
ts_us = ts(data = us$USA_Avg_1, start = 1, end = 150, frequency = 12)
ts_global_new = ts(data = global$Global_Avg_1, start = 150, end = 170, frequency = 12)
ts_us_new = ts(data = us$USA_Avg_1, start = 150, end = 170, frequency = 12)
library(astsa)
temp = ts(data = global$Global_Avg_1, frequency = 12)
per = mvspec(temp, log="no", main="Periodogram")
n = per$n.used
c(length(temp), n)
m = length(per$freq)
y = cbind(1:m, per$spec, per$freq, 1/per$freq)
colnames(y) = c('j','periodogram','frequency','year/cycle')
y[order(y[,'periodogram'], decreasing=TRUE)[1:10], ]
library(astsa)
temp2 = ts(data = us$USA_Avg_1, start = 1, end = 170, frequency = 12)
per = mvspec(temp2, log="no", main="Periodogram")
n = per$n.used
c(length(temp2), n)
m = length(per$freq)
y = cbind(1:m, per$spec, per$freq, 1/per$freq)
colnames(y) = c('j','periodogram','frequency','year/cycle')
y[order(y[,'periodogram'], decreasing=TRUE)[1:10], ]
library(astsa)
per = mvspec(temp2, log="no", main="Periodogram")
n = per$n.used
c(length(temp2), n)
m = length(per$freq)
y = cbind(1:m, per$spec, per$freq, 1/per$freq)
colnames(y) = c('j','periodogram','frequency','year/cycle')
y[order(y[,'periodogram'], decreasing=TRUE)[1:10], ]
# plot
per101 = mvspec(ts_global, plot=FALSE, spans=100) # estimate spectrum using L=101
n = per101$n.used
freq = 1:(n/2) / n
plot(log(abs(freq[1:30])), log(per101$spec[1:30]), type="l", lty=1, lwd=2,
xlab="log (|w|)", ylab="log f(w)", ylim=c(-1.3, 0.5),
main="Slope Est")
# fit linear model
coef(lm(log(per101$spec[1:30]) ~ log(abs(freq[1:30]))))
per101 = mvspec(ts_us, plot=FALSE, spans=100) # estimate spectrum using L=101
n = per101$n.used
freq = 1:(n/2) / n
plot(log(abs(freq[1:30])), log(per101$spec[1:30]), type="l", lty=1, lwd=2,
xlab="log (|w|)", ylab="log f(w)", ylim=c(-1.3, 0.5),
main="Slope Est")
# fit linear model
coef(lm(log(per101$spec[1:30]) ~ log(abs(freq[1:30]))))
glob_ann = aggregate(global$Global_Avg_1, list(global$Year), FUN=mean)
ts_annual = ts(data = glob_ann$x, frequency = 12)
acfs = acf2(ts_annual, max.lag=48, main="ACF/PACF")
y1 = diff(ts_global, lag=12)
per1 = mvspec(y1, log="no", ylim=c(0,10))
y2 = diff(ts_us, lag=12)
per2 = mvspec(y2, log="no", ylim=c(0,10))
y3 = diff(ts_global_new, lag=12)
per1 = mvspec(y1, log="no", ylim=c(0,10))
y4 = diff(ts_us_new, lag=12)
per2 = mvspec(y2, log="no", ylim=c(0,10))
acfs = acf2(ts_global, max.lag=120, main="ACF/PACF")
acfs = acf2(ts_us, max.lag=120, main="ACF/PACF")
mod1 = sarima(y1, p=12, d=0, q=20, details=FALSE)
arima(x = ts_global, order = c(12, 0, 13))
arima(x = ts_global, order = c(12, 0, 14))
